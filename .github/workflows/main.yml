name: Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events for the main and experimental branches
  push:
    branches: [ main, experimental ]
  pull_request:
    branches: [ main, experimental ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  buildLinux:
    runs-on: ubuntu-latest

    steps:
      # Checks out the repository under $GITHUB_WORKSPACE so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Sets up Haxe environment
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      # Installs necessary libraries and dependencies
      - name: Install Libraries
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get -qq install -o Dpkg::Progress-Fancy="0" -o APT::Color="0" -o Dpkg::Use-Pty="0" libvlc-dev libvlccore-dev < /dev/null > /dev/null
          haxelib setup ~/haxelib
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install

      # Skips SScript setup mode
      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> ~/settings.cocoa

      # Creates a version tag using the GitHub run ID
      - name: Create Version Tag
        run: echo "${{ github.run_id }}" > VERSION

      # Compiles the project
      - name: Compile
        run: haxelib run lime build linux --app-version="4.0.0-${{ github.run_id }}"

      # Uploads the compiled artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: linuxBuild
          path: export/release/linux/bin/*
          if-no-files-found: error

  buildWindows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
          haxelib setup C:/haxelib
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install
        shell: cmd

      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> %USERPROFILE%/settings.cocoa
        shell: cmd

      - name: Create Version Tag
        run: echo "${{ github.run_id }}" > VERSION

      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: windowsBuild
          path: export/release/windows/bin/*
          if-no-files-found: error

  buildMac:
    runs-on: macos-${{ matrix.version }}
    strategy:
      matrix:
        version: [12, 13]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install

      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> ~/settings.cocoa

      - name: Create Version Tag
        run: echo "${{ github.run_id }}" > VERSION

      - name: Compile
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: macBuild-${{ matrix.version }}
          path: export/release/macos/bin/*
          if-no-files-found: error

  buildAndroid:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install

      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true 

      - name: Compile
        run: haxelib run lime build android

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

  buildiOS:
    runs-on: macos-13

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4

      - name: Install Libraries
        run: |
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install

      - name: Compile
        run: haxelib run lime build ios -nosign

      - name: Make Ipa
        run: |
          cd export/release/ios/build/*-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r PsychEngine.ipa Payload

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.ipa
          if-no-files-found: error
