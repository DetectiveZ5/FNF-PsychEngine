name: Build

on:
  push:
    branches: [ main, experimental ]
  pull_request:
    branches: [ main, experimental ]
  workflow_dispatch:

jobs:
  buildLinux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      
      - name: Install VLC libraries
        run: |
          sudo apt-get -qq install libvlc-dev libvlccore-dev
      
      - name: Setup haxelib
        run: haxelib setup ~/haxelib
      
      - name: Install hmm
        run: |
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install
      
      - name: Install hxcpp
        run: haxelib install hxcpp > /dev/null --quiet
      
      - name: Compile Haxe code
        run: haxe -cp ./src -D analyzer-optimize -main Main --interp
      
      - name: Echo settings
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> ~/settings.cocoa
      
      - name: Create Version Tag
        run: echo "${{ github.run_id }}" > VERSION
      
      - name: Compile Linux build
        run: haxelib run lime build linux --app-version="4.0.0-${{ github.run_id }}"
      
      - name: Upload Linux build artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: linuxBuild
          path: export/release/linux/bin/*
          if-no-files-found: error

  buildWindows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      - name: Install Libraries
        run: |
          haxelib setup C:/haxelib
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install
          haxelib install hxcpp > /dev/null --quiet
          haxe -cp ./setup -D analyzer-optimize -main Main --interp
        shell: cmd
      - name: Skip SScript setup mode
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> %USERPROFILE%/settings.cocoa
        shell: cmd
      - name: Create Version Tag
        run: echo "${{ github.run_id }}" > VERSION
      - name: Compile
        run: haxelib run lime build windows --app-version="4.0.0-${{ github.run_id }}"
      - name: Upload Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: windowsBuild
          path: export/release/windows/bin/*
          if-no-files-found: error

  buildMac:
    runs-on: macos-13
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      
      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install
          haxelib install hxcpp > /dev/null --quiet
          haxe -cp ./setup -D analyzer-optimize -main Main --interp
      
      - name: Echo settings
        run: echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >> ~/settings.cocoa
      
      - name: Create Version Tag
        run: echo "${{ github.run_id }}" > VERSION
      
      - name: Compile macOS build
        run: haxelib run lime build mac --app-version="4.0.0-${{ github.run_id }}"
      
      - name: Upload macOS build artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: macBuild-13
          path: export/release/macos/bin/*
          if-no-files-found: error

  buildAndroid:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      - name: Install Libraries
        run: |
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install
          haxelib install hxcpp > /dev/null --quiet
          haxe -cp ./setup -D analyzer-optimize -main Main --interp
      - name: Configure Android
        run: |
          haxelib run lime config ANDROID_SDK $ANDROID_HOME
          haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_LATEST_HOME
          haxelib run lime config JAVA_HOME $JAVA_HOME
          haxelib run lime config ANDROID_SETUP true 
      - name: Compile
        run: haxelib run lime build android
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: androidBuild
          path: export/release/android/bin/app/build/outputs/apk/release/*.apk
          if-no-files-found: error

  buildiOS:
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Haxe
        uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.3.4
      - name: Install Libraries
        run: |
          haxelib setup ~/haxelib
          haxelib --global install hmm
          haxelib --global run hmm setup
          hmm install
          haxelib install hxcpp > /dev/null --quiet
          haxe -cp ./setup -D analyzer-optimize -main Main --interp
      - name: Compile
        run: haxelib run lime build ios -nosign
      - name: Make Ipa
        run: |
          cd export/release/ios/build/*-iphoneos
          mkdir Payload
          mv *.app Payload
          zip -r PsychEngine.ipa Payload
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: iOSBuild
          path: export/release/ios/build/Release-iphoneos/*.ipa
          if-no-files-found: error
